require 'msf/core'

class MetasploitModule < Msf::Auxiliary
  include Msf::Auxiliary::Scanner

  # don't forget this like I did and got stuck for a while 
  include Msf::Exploit::Remote::SMB::Client

  def initialize(info = {})
    super
    register_options(
      [
        Opt::RPORT(445)
      ]
    )
  end

  def run_host(ip)
    print_status("Checking #{ip} for MS17-010 vulnerability")
    begin
      connect
      smb_login

      if check_ms17_010
        print_good("#{ip} is vulnerable to MS17-010.")
      else
        print_status("#{ip} is not vulnerable unless im wrong and you know what i might be sorry, xoxo Chlo")
      end

      disconnect
    rescue ::Rex::ConnectionRefused, ::Rex::HostUnreachable, ::Rex::ConnectionTimeout
      print_error("#{ip} - Unable to connect to SMB service")
    rescue ::Interrupt
      raise $!
    rescue ::Exception => e
      print_error("#{ip} - Error: #{e.class} #{e.message}")
    end
  end

  def check_ms17_010
    pkt = build_check_packet
    sock.put(pkt)
    resp = sock.get_once(-1, 5)
    if resp && resp.include?("\x05\x02\x00\xc0".b)
      return true
    else
      return false
    end
  end

  def build_check_packet
    "\x00" * 100
  end
end

