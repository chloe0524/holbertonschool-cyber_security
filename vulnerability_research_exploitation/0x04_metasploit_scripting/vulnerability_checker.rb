require 'msf/core'

class MetasploitModule < Msf::Auxiliary
  include Msf::Exploit::Remote::SMB::Client

  def initialize(info = {})
    super(update_info(info,
      'Name'        => 'MS17-010 Vulnerability Checker',
      'Description' => %q{
        This module checks if a target system is vulnerable to MS17-010 (EternalBlue).
      },
      'Author'      => [ 'Your Name' ],
      'License'     => MSF_LICENSE
    ))

    register_options([
      Opt::RHOST()
    ])
  end

  def run
    rhost = datastore['RHOST']
    print_status("Checking #{rhost} for MS17-010 vulnerability")
    begin
      connect
      smb1 = smb_peer_native_os
      if smb1 && smb1.include?('Windows')
        if smb1 =~ /Windows 7|Windows Server 2008|Windows Vista|Windows XP/
          print_good("#{rhost} is vulnerable to MS17-010.")
        else
          print_status("#{rhost} does not appear vulnerable to MS17-010.")
        end
      else
        print_status("Could not determine OS for #{rhost}.")
      end
    rescue ::Rex::Proto::SMB::Exceptions::ErrorCode => e
      if e.to_s.include?('STATUS_INSUFF_SERVER_RESOURCES')
        print_good("#{rhost} is vulnerable to MS17-010.")
      else
        print_error("Error: #{e}")
      end
    rescue => e
      print_error("Error: #{e}")
    ensure
      disconnect rescue nil
    end
    print_status("Auxiliary module execution completed")
  end
end 