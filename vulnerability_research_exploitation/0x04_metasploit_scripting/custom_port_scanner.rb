require 'msf/core'

class MetasploitModule < Msf::Auxiliary
  include Msf::Auxiliary::Scanner 
  # MS calls auto run_host for each RHOST with this include â†‘

  def initialize
    super(
      'Name'    => 'Chlo Port Scaaaaaaan',
      'License' => MSF_LICENSE
    )

    register_options(
      [
        Opt::RHOST(),
        OptInt.new('STARTPORT', [true, 'Start of port range to scan', 1]),
        OptInt.new('ENDPORT', [true, 'End of port range to scan', 1024])
      ]
    )
  end

  def run_host(ip)
    start_port = datastore['STARTPORT']
    end_port = datastore['ENDPORT']
    open_ports = []

    print_status("Scanning #{ip} from port #{start_port} to #{end_port}")

    (start_port..end_port).each do |port|
      begin
        ::Timeout.timeout(1) do
          s = TCPSocket.new(ip, port)
          s.close
          print_good("#{ip}:#{port} - Port #{port} is open on #{ip}")
          open_ports << port
        end
      rescue

      end
    end

    if open_ports.any?
      print_status("Open ports on #{ip}: #{open_ports.join(', ')}")
    else
      print_status("No open ports found on #{ip} in range #{start_port}-#{end_port}")
    end
  end
end

